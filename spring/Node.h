#pragma once
#include <vector>
#include "layer.h"
#include "object.h"
#include "transform.h" // todo 将transform移动到gameobject节点
#include "gameobject.h"

using namespace std;

namespace spring 
{ 
	enum NodeFlags 
	{
		BuiltIn = -1, // all built-in nodes are generated by spring engine , these objects provide functionality for editor scene. those objects does not need add into scene.
		Static = 0,  // all static nodes are created in editor mode , those nodes would serialize into scene data.
		Dynamic = 1,  // all dynamic nodes would not be serialized into scene data
	};

	class Node : public Object
	{
	private:
		static vector<Node*> allNodes;
	public:

		bool enabled = true;
		NodeFlags flags = NodeFlags::Dynamic;
		Transform* transform = nullptr;
		GameObject* gameobject = nullptr;
		
		Node();
		Node(const char* nodeName);
		~Node();

		void Destroy() override;

		TypeInfo GetTypeInfo() override
		{
			if (nullptr == this->typeInfo)
				this->typeInfo = new TypeInfo("Node");
			return *this->typeInfo;
		}
	};
}
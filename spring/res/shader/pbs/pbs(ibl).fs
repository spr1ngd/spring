#version 330 core

out vec4 FragColor;

void main()
{
    // diffuse part IBL漫反射部分

    // 1. 获取辐照度图(立方体纹理格式)，可实现将等距柱状投影图渲染到立方体纹理；
    // 2. 对立方体纹理预卷积，预计算朝向N的半球中每个方向wi的总平均辐射率；
    // 3. 利用法线对预计算辐照图纹理结构采样，并与支持光照的pbr算法结合完成ibl漫反射部分

    // specular part IBL镜面反射部分

    // 利用Epic Games的分割求和近似法实现镜面部分积分卷积
    // 1. 分割求和近似法将BRDF镜面部分分为 预滤波环境贴图和BRDF预积分
    // 预滤波卷积
    // 2.1 预滤波环境贴图采用GGX重要性采样公式（蒙特卡洛积分和低差异序列） 
    // 2.2 低差异序列算法
    // 2.3 在循环中使用低差异序列生成采样向量，并对辐照度图进行采样
    // 2.4 按照不同级别的粗糙度将预滤波结果存储到mipmap的预计算环境贴图中
    // 2.5 处理预滤波卷积的伪像（高粗糙度立方体纹理接缝线性插值、预滤波卷积亮点）
    // BRDF预积分
    // 3.1 对BRDF方程进行配平、拆解得出化解公式
    // 3.2 对化解后的公式进行预积分并存储到16位浮点格式为GL_RG16的帧缓存中
    // 合并预滤波卷积和BRDF预积分
    // 4. 计算菲涅尔系数F，合并计算出镜面反射部分结果
    
    // IBL最终计算

    // 将镜面计算结果与漫反射部分合并
}